# Generated by Django 4.1.2 on 2022-10-30 05:30

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('business_id', models.CharField(max_length=22, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=10)),
                ('postal_code', models.CharField(max_length=10)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('stars', models.FloatField()),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('is_open', models.PositiveIntegerField(default=0)),
                ('attributes', models.JSONField(null=True)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, null=True, size=None)),
                ('hours', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'business',
            },
        ),
        migrations.CreateModel(
            name='YelpUser',
            fields=[
                ('user_id', models.CharField(max_length=22, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('yelping_since', models.DateTimeField()),
                ('friends', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=22, null=True), blank=True, null=True, size=None)),
                ('useful', models.PositiveIntegerField(default=0)),
                ('funny', models.PositiveIntegerField(default=0)),
                ('cool', models.PositiveIntegerField(default=0)),
                ('fans', models.PositiveIntegerField(default=0)),
                ('elite', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('average_stars', models.FloatField()),
                ('compliment_hot', models.PositiveIntegerField(default=0)),
                ('compliment_more', models.PositiveIntegerField(default=0)),
                ('compliment_profile', models.PositiveIntegerField(default=0)),
                ('compliment_cute', models.PositiveIntegerField(default=0)),
                ('compliment_list', models.PositiveIntegerField(default=0)),
                ('compliment_note', models.PositiveIntegerField(default=0)),
                ('compliment_plain', models.PositiveIntegerField(default=0)),
                ('compliment_cool', models.PositiveIntegerField(default=0)),
                ('compliment_funny', models.PositiveIntegerField(default=0)),
                ('compliment_writer', models.PositiveIntegerField(default=0)),
                ('compliment_photos', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.CharField(max_length=22, primary_key=True, serialize=False)),
                ('stars', models.FloatField(default=0)),
                ('date', models.DateTimeField()),
                ('text', models.TextField()),
                ('useful', models.PositiveIntegerField(default=0)),
                ('funny', models.PositiveIntegerField(default=0)),
                ('cool', models.PositiveIntegerField(default=0)),
                ('business_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='yelp.business')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='yelp.yelpuser')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
    ]
